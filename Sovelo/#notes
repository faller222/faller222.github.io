Crie um modulo chamado dogs

Crie um componente chamada dogPhoto

Crie uma rota default no modulo dogs para o componente dogPhoto

Crie um service chamado dogService

Consuma a seguinte api https://dog.ceo/dog-api/

Faca a injecao deste service no componente dogPhoto

Mostre a informacao vinda da API na tela






generame un readme en ingles para este proyecto

mencionar que se uso node v20.18.2


Mencionar que en el package.json se dejo el script para levantar el server en el puerto 3000
se ejecuta NPM start

Mencionar que en este caso solo hay un dominio pero esta agrupado por dominio y dentro de dominio por capas,
donde existe dogApi.js como repositorio, en este caso externo consumiento una api
existe dogController.js que es quien maneja las rutas y todo lo relacionado con HTTP
podria haber un dogService.js quien se encargue de los calculos, pero en este caso no aplico por que es un pasamanos, muy simple


Ademas se configuro Swagger con openAPI en la ruta /api-docs

Mencionar que se intento usar pipe, en lugar de esperar la respuesta del cliente y responder, si no mejor responder el stream conforme iba llegando.
Por alguna razon node no estaba cerrando la conexion, tanto con KOA o Express dio el mismo problema, no se quiso invertir mas tiempo



Mencionar que se uso jest supertest nock para testear y mockear las apis calls
y que los test se ejecutan con npm test




mencionar que se evaluo koa vs express y para este caso se identifico que KOA era 10% mas rapido
en el Test de PIPE


mencionar que hay un archivo completo llamado testKoaPipe.js
que se ejecuta con node testKoaPipe.js

y se prueba con

#Test KOA endpoint
GET http://localhost:4000/random-dog

mencionar que hay un archivo completo llamado testExpressPipe.js
que se ejecuta con node testExpressPipe.js

y se prueba con

#Test Express endpoint
GET http://localhost:3500/random-dog

